<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="Main" Id="{6f4a6b61-6bc5-4c57-90c1-877a33915112}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Main
VAR
	// Motors
	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[GasJetX-EL7041]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[GasJetX-EL7041]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TMO:LAMP:MMS:01
	'}
	M1		: DUT_MotionStage := (bPowerSelf:=TRUE,
    nEnableMode:=ENUM_StageEnableMode.DURING_MOTION,
//    nEnableMode:=ENUM_StageEnableMode.ALWAYS,
    nHomingMode := ENUM_EpicsHomeCmd.ABSOLUTE_SET); // Gas Jet X

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[GasJetY-EL7041]^STM Status^Status^Digital input 2;
                              .bLimitBackwardEnable:=TIIB[GasJetY-EL7041]^STM Status^Status^Digital input 1'}
	{attribute 'pytmc' := '
		pv: TMO:LAMP:MMS:02
	'}
	M2		: DUT_MotionStage := (bPowerSelf:=TRUE,
	nEnableMode:=ENUM_StageEnableMode.DURING_MOTION,
//    nEnableMode:=ENUM_StageEnableMode.ALWAYS,
    nHomingMode := ENUM_EpicsHomeCmd.ABSOLUTE_SET); // Gas Jet Y

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[GasJetZ-EL7041]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[GasJetZ-EL7041]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TMO:LAMP:MMS:03
	'}
	M3		: DUT_MotionStage := (bPowerSelf:=TRUE,
    nEnableMode:=ENUM_StageEnableMode.DURING_MOTION,
//    nEnableMode:=ENUM_StageEnableMode.ALWAYS,
    nHomingMode := ENUM_EpicsHomeCmd.ABSOLUTE_SET); // Gas Jet Z

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[GasNeedleX-EL7041]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[GasNeedleX-EL7041]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TMO:LAMP:MMS:04
	'}
	M4	    : DUT_MotionStage := (bPowerSelf:=TRUE,
    nEnableMode:=ENUM_StageEnableMode.DURING_MOTION,
//    nEnableMode:=ENUM_StageEnableMode.ALWAYS,
    nHomingMode := ENUM_EpicsHomeCmd.ABSOLUTE_SET); // Gas Needle X

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[GasNeedleY-EL7041]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[GasNeedleY-EL7041]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TMO:LAMP:MMS:05
	'}
	M5	    : DUT_MotionStage := (bPowerSelf:=TRUE,
    nEnableMode:=ENUM_StageEnableMode.DURING_MOTION,
//    nEnableMode:=ENUM_StageEnableMode.ALWAYS,
    nHomingMode := ENUM_EpicsHomeCmd.ABSOLUTE_SET); // Gas Needle Y

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[GasNeedleZ-EL7041]^STM Status^Status^Digital input 2;
                              .bLimitBackwardEnable:=TIIB[GasNeedleZ-EL7041]^STM Status^Status^Digital input 1'}
	{attribute 'pytmc' := '
		pv: TMO:LAMP:MMS:06
	'}
	M6	    : DUT_MotionStage := (bPowerSelf:=TRUE,
    nEnableMode:=ENUM_StageEnableMode.DURING_MOTION,
//    nEnableMode:=ENUM_StageEnableMode.ALWAYS,
    nHomingMode := ENUM_EpicsHomeCmd.ABSOLUTE_SET); // Gas Needle Z

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[SamplePaddleXY-EL1084]^Channel 1^Input;
                              .bLimitBackwardEnable:=TIIB[SamplePaddleXY-EL1084]^Channel 2^Input'}
	{attribute 'pytmc' := '
		pv: TMO:LAMP:MMS:07
	'}
	M7  	: DUT_MotionStage := (bPowerSelf:=TRUE); // Sample Paddle X

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[SamplePaddleXY-EL1084]^Channel 4^Input;
                              .bLimitBackwardEnable:=TIIB[SamplePaddleXY-EL1084]^Channel 3^Input'}
	{attribute 'pytmc' := '
		pv: TMO:LAMP:MMS:08
	'}
	M8  	: DUT_MotionStage := (bPowerSelf:=TRUE); // Sample Paddle Y

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[SamplePaddleZ-EL1084]^Channel 1^Input;
                              .bLimitBackwardEnable:=TIIB[SamplePaddleZ-EL1084]^Channel 2^Input'}
	{attribute 'pytmc' := '
		pv: TMO:LAMP:MMS:09
    '}
	M9  	: DUT_MotionStage := (bPowerSelf:=TRUE); // Sample Paddle Z
	
	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[GasNeedleX-EL7041]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[GasNeedleX-EL7041]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TMO:LAMP:MMS:10
    '}
<<<<<<< HEAD
	M10  	: DUT_MotionStage := (bPowerSelf:=TRUE,
    nEnableMode:=ENUM_StageEnableMode.DURING_MOTION,
//    nEnableMode:=ENUM_StageEnableMode.ALWAYS,
    nHomingMode := ENUM_EpicsHomeCmd.ABSOLUTE_SET); // M10
=======
	M10  	: DUT_MotionStage := (bPowerSelf:=TRUE); // Flow Cell X
	
	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[GasNeedleY-EL7041]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[GasNeedleY-EL7041]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TMO:LAMP:MMS:11
    '}
	M11  	: DUT_MotionStage := (bPowerSelf:=TRUE); // Flow Cell Y
	
	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[GasNeedleZ-EL7041]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[GasNeedleZ-EL7041]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TMO:LAMP:MMS:12
    '}
	M12  	: DUT_MotionStage := (bPowerSelf:=TRUE); // Flow Cell Z
	
//	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[FlowCellTheta-EL7041]^STM Status^Status^Digital input 1;
//                             .bLimitBackwardEnable:=TIIB[FlowCellTheta-EL7041]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TMO:LAMP:MMS:13
    '}
	M13  	: DUT_MotionStage := (bPowerSelf:=TRUE); // Flow Cell Theta
>>>>>>> 0be1cb9f73d0a52761ccd891766db87d78523ec4
	
	fbMotionStageM1	: FB_MotionStage;
	fbMotionStageM2	: FB_MotionStage;
	fbMotionStageM3	: FB_MotionStage;
	fbMotionStageM4	: FB_MotionStage;
	fbMotionStageM5	: FB_MotionStage;
	fbMotionStageM6	: FB_MotionStage;
	fbMotionStageM7	: FB_MotionStage;
	fbMotionStageM8	: FB_MotionStage;
	fbMotionStageM9	: FB_MotionStage;
	fbMotionStageM10	: FB_MotionStage;
<<<<<<< HEAD
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Hardware Enable
// Gas Jet
M1.bHardwareEnable	:= TRUE;
M2.bHardwareEnable	:= TRUE;
M3.bHardwareEnable	:= TRUE;
// Gas Needle
M4.bHardwareEnable	:= TRUE;
M5.bHardwareEnable	:= TRUE;
M6.bHardwareEnable	:= TRUE;
// Sample Paddle
//M7.bHardwareEnable	:= TRUE;
//M8.bHardwareEnable	:= TRUE;
//M9.bHardwareEnable	:= TRUE;
	
//Extra
M10.bHardwareEnable	:= TRUE;
	
// fbMotionStage
// Gas Jet
fbMotionStageM1(stMotionStage:=M1);
fbMotionStageM2(stMotionStage:=M2);
fbMotionStageM3(stMotionStage:=M3);
// Gas Needle
fbMotionStageM4(stMotionStage:=M4);
fbMotionStageM5(stMotionStage:=M5);
fbMotionStageM6(stMotionStage:=M6);
// Sample Paddle
//fbMotionStageM7(stMotionStage:=M7);
//fbMotionStageM8(stMotionStage:=M8);
//fbMotionStageM9(stMotionStage:=M9);
	
//Extra
fbMotionStageM10(stMotionStage:=M10);

]]></ST>
=======
	fbMotionStageM11	: FB_MotionStage;
	fbMotionStageM12	: FB_MotionStage;
	fbMotionStageM13	: FB_MotionStage;
	
	//persistent data
	fbWritePersistentData	: WritePersistentData;
	bInit					: BOOL := TRUE;
	fbWriteDelay			: TON;
	mcSetPosition			: ARRAY [1..13] of MC_SetPosition;
END_VAR

VAR PERSISTENT 
	fGasJetXPos		: LREAL;
	fGasJetYPos		: LREAL;
	fGasJetZPos		: LREAL;
	fGasNeedleXPos	: LREAL;
	fGasNeedleYPos	: LREAL;
	fGasNeedleZPos	: LREAL;
	fGasPaddleXPos	: LREAL;
	fGasPaddleYPos	: LREAL;
	fGasPaddleZPos	: LREAL;
	fFlowCellXPos   : LREAL;
	fFlowCellYPos   : LREAL;
	fFlowCellZPos   : LREAL;
	fFlowCellThetaPos : LREAL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bInit THEN
	//Sets axes position with persistent value
	mcSetPosition[1](Axis:=M1.Axis, Position:=fGasJetXPos, Mode:=FALSE, Execute:=TRUE);
	mcSetPosition[2](Axis:=M2.Axis, Position:=fGasJetYPos, Mode:=FALSE, Execute:=TRUE);
	mcSetPosition[3](Axis:=M3.Axis, Position:=fGasJetZPos, Mode:=FALSE, Execute:=TRUE);
	mcSetPosition[4](Axis:=M4.Axis, Position:=fGasNeedleXPos, Mode:=FALSE, Execute:=TRUE);
	mcSetPosition[5](Axis:=M5.Axis, Position:=fGasNeedleyPos, Mode:=FALSE, Execute:=TRUE);
	mcSetPosition[6](Axis:=M6.Axis, Position:=fGasNeedleZPos, Mode:=FALSE, Execute:=TRUE);
    mcSetPosition[6](Axis:=M6.Axis, Position:=fGasNeedleZPos, Mode:=FALSE, Execute:=TRUE);
    mcSetPosition[6](Axis:=M6.Axis, Position:=fGasNeedleZPos, Mode:=FALSE, Execute:=TRUE);
    mcSetPosition[6](Axis:=M6.Axis, Position:=fGasNeedleZPos, Mode:=FALSE, Execute:=TRUE);
	mcSetPosition[7](Axis:=M7.Axis, Position:=fGasPaddleXPos, Mode:=FALSE, Execute:=TRUE);
	mcSetPosition[8](Axis:=M8.Axis, Position:=fGasPaddleyPos, Mode:=FALSE, Execute:=TRUE);
	mcSetPosition[9](Axis:=M9.Axis, Position:=fGasPaddleZPos, Mode:=FALSE, Execute:=TRUE);
	mcSetPosition[10](Axis:=M10.Axis, Position:=fFLowCellXPos, Mode:=FALSE, Execute:=TRUE);
	mcSetPosition[11](Axis:=M11.Axis, Position:=fFLowCellYPos, Mode:=FALSE, Execute:=TRUE);
	mcSetPosition[12](Axis:=M12.Axis, Position:=fFLowCellZPos, Mode:=FALSE, Execute:=TRUE);
	mcSetPosition[13](Axis:=M13.Axis, Position:=fFLowCellThetaPos, Mode:=FALSE, Execute:=TRUE);
	if (mcSetPosition[1].Done OR mcSetPosition[1].Error) AND (mcSetPosition[2].Done OR mcSetPosition[2].Error) 
		AND (mcSetPosition[3].Done OR mcSetPosition[3].Error) AND (mcSetPosition[4].Done OR mcSetPosition[4].Error) 
		AND (mcSetPosition[5].Done OR mcSetPosition[5].Error) AND (mcSetPosition[6].Done OR mcSetPosition[6].Error) 
		AND (mcSetPosition[7].Done OR mcSetPosition[7].Error) AND (mcSetPosition[8].Done OR mcSetPosition[8].Error) 
		AND (mcSetPosition[9].Done OR mcSetPosition[9].Error) AND (mcSetPosition[10].Done OR mcSetPosition[10].Error)
		AND (mcSetPosition[11].Done OR mcSetPosition[11].Error) AND (mcSetPosition[12].Done OR mcSetPosition[12].Error)
		AND (mcSetPosition[3].Done OR mcSetPosition[9].Error)
		THEN
		bInit:=FALSE;
		mcSetPosition[1](Axis:=M1.Axis, Execute:=FALSE);
		mcSetPosition[2](Axis:=M2.Axis, Execute:=FALSE);
		mcSetPosition[3](Axis:=M3.Axis, Execute:=FALSE);
		mcSetPosition[4](Axis:=M4.Axis, Execute:=FALSE);
		mcSetPosition[5](Axis:=M5.Axis, Execute:=FALSE);
		mcSetPosition[6](Axis:=M6.Axis, Execute:=FALSE);
		mcSetPosition[7](Axis:=M7.Axis, Execute:=FALSE);
		mcSetPosition[8](Axis:=M8.Axis, Execute:=FALSE);
		mcSetPosition[9](Axis:=M9.Axis, Execute:=FALSE);
		mcSetPosition[10](Axis:=M10.Axis, Execute:=FALSE);
		mcSetPosition[11](Axis:=M11.Axis, Execute:=FALSE);
		mcSetPosition[12](Axis:=M12.Axis, Execute:=FALSE);
		mcSetPosition[13](Axis:=M13.Axis, Execute:=FALSE);
	END_IF
ELSE
	// Hardware Enable
	// Gas Jet
	M1.bHardwareEnable	:= TRUE;
	M2.bHardwareEnable	:= TRUE;
	M3.bHardwareEnable	:= TRUE;
	// Gas Needle
	M4.bHardwareEnable	:= TRUE;
	M5.bHardwareEnable	:= TRUE;
	M6.bHardwareEnable	:= TRUE;
	// Sample Paddle
	M7.bHardwareEnable	:= TRUE;
	M8.bHardwareEnable	:= TRUE;
	M9.bHardwareEnable	:= TRUE;
	
	//Extra Flow Cell Manipulator
	M10.bHardwareEnable	:= TRUE;
	M11.bHardwareEnable	:= TRUE;
	M12.bHardwareEnable	:= TRUE;
	M13.bHardwareEnable	:= TRUE;
	
	//Flow cell theta has no limit switches
	M13.bLimitForwardEnable := True;
	M13.bLimitBackwardEnable := True;
	
	// fbMotionStage
	// Gas Jet
	fbMotionStageM1(stMotionStage:=M1);
	fbMotionStageM2(stMotionStage:=M2);
	fbMotionStageM3(stMotionStage:=M3);
	// Gas Needle
	fbMotionStageM4(stMotionStage:=M4);
	fbMotionStageM5(stMotionStage:=M5);
	fbMotionStageM6(stMotionStage:=M6);
	// Sample Paddle
	fbMotionStageM7(stMotionStage:=M7);
	fbMotionStageM8(stMotionStage:=M8);
	fbMotionStageM9(stMotionStage:=M9);
	
	//Extra
	fbMotionStageM10(stMotionStage:=M10);
	fbMotionStageM11(stMotionStage:=M11);
	fbMotionStageM12(stMotionStage:=M12);
	fbMotionStageM13(stMotionStage:=M13);

	//Keep track of position
	fGasJetXPos		:= M1.Axis.NcToPlc.ActPos;
	fGasJetYPos		:= M2.Axis.NcToPlc.ActPos;
	fGasJetZPos		:= M3.Axis.NcToPlc.ActPos;
	fGasNeedleXPos	:= M4.Axis.NcToPlc.ActPos;
	fGasNeedleYPos	:= M5.Axis.NcToPlc.ActPos;
	fGasNeedleZPos	:= M6.Axis.NcToPlc.ActPos;
	fGasPaddleXPos	:= M7.Axis.NcToPlc.ActPos;
	fGasPaddleYPos	:= M8.Axis.NcToPlc.ActPos;
	fGasPaddleZPos	:= M9.Axis.NcToPlc.ActPos;
	fFlowCellXPos	:= M10.Axis.NcToPlc.ActPos;
	fFlowCellYPos	:= M11.Axis.NcToPlc.ActPos;
	fFlowCellZPos	:= M12.Axis.NcToPlc.ActPos;
	fFlowCellThetaPos	:= M13.Axis.NcToPlc.ActPos;
	IF fbWriteDelay.Q THEN
		fbWritePersistentData(NETID:='', PORT:=851, START:=TRUE, TMOUT:=T#1S);
		fbWriteDelay(IN:=FALSE);
	ELSE
		fbWritePersistentData(START:=FALSE);
		fbWriteDelay(IN:=TRUE, PT:=T#0.5S);
	END_IF	
END_IF;]]></ST>
>>>>>>> 0be1cb9f73d0a52761ccd891766db87d78523ec4
    </Implementation>
  </POU>
</TcPlcObject>